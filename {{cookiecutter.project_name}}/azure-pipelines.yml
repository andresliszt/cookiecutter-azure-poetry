pool: $(AZURE_AGENT)

trigger:
  batch: true
  branches:
    include:
      - refs/tags/*
      - master

    exclude:
      - feature/*
      - bugfix/*
      - release/*

jobs:
  - job: testing
    displayName: Install dependencies and Run Tests
    steps:
      - bash: DOCKER_BUILDKIT=1 docker build --target tester .
        displayName: Test inside Docker

  {%- if cookiecutter.publish_in == "Private PyPI"%}
  - job: publish_wheel
    
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')

    displayName: Publish Wheels
    variables:
      ARTIFACT_FEED: $(ARTIFACT_FEED)
    dependsOn:
      - testing
          
    steps:
      - task: TwineAuthenticate@1
        displayName: Twine Authenticate
        inputs:
          artifactFeed: $(ARTIFACT_FEED)

      - bash: cp $(PYPIRC_PATH) ./PYPIRC
        displayName: Copy PYPIRC path

      - bash: DOCKER_BUILDKIT=1 docker build --build-arg ARTIFACT_FEED=${ARTIFACT_FEED} --target publisher .
        displayName: Publish wheels from Docker multistage

  {%- elif cookiecutter.publish_in == "ACR"%}
  - job: publish
    variables:
      tag: $(Build.BuildId)
      acr: $(acr)
      acrRepository: $(acrRepository)

    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
    dependsOn:
      - build
    displayName:  Publish to ACR
    steps:
      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry: $(acr)

      - task: Docker@2
        displayName: Push
        inputs:
          arguments: --target base
          command: push
          containerRegistry: $(acr)
          repository: $(acrRepository)
          tags: |
            latest
            $(tag)
  {%- endif %}